---
- name: Deploy Frontend Next.js (produção)
  hosts: frontend
  become: true

  vars:
    app_dir: /home/ubuntu/frontend
    repo_url: https://github.com/wbrunovieira/revalidaItaliaFrontNext.git

  tasks:
    - name: Ensure {{ app_dir }} exists
      file:
        path: '{{ app_dir }}'
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Update apt and install base packages
      apt:
        update_cache: yes
        name:
          - curl
          - git
          - build-essential
          - python3
          - python3-apt
        state: present

    - name: Install Node.js & npm (NodeSource)
      shell: |
        curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
        apt-get install -y nodejs
      args:
        executable: /bin/bash

    - name: Install PM2 globally
      npm:
        name: pm2
        global: yes
        state: present

    - name: Clone or update repo
      git:
        repo: '{{ repo_url }}'
        dest: '{{ app_dir }}'
        version: main
        force: yes
      become_user: ubuntu

    # --- Debug: checar variável antes de template ---
    - name: Debug NEXT_PUBLIC_API_URL antes de gerar .env
      debug:
        msg: 'NEXT_PUBLIC_API_URL={{ NEXT_PUBLIC_API_URL }}'

    - name: Generate .env for Next.js
      template:
        src: 'templates/.env.prod.j2'
        dest: '{{ app_dir }}/.env'
        owner: ubuntu
        group: ubuntu
        mode: '0600'
      become_user: ubuntu

    # --- Debug: exibir conteúdo gerado ---
    - name: Show generated .env
      command: cat {{ app_dir }}/.env
      register: env_prod
      become_user: ubuntu

    - name: Debug conteúdo de .env
      debug:
        var: env_prod.stdout_lines

    - name: Install project dependencies
      command: npm install
      args:
        chdir: '{{ app_dir }}'
      become_user: ubuntu

    - name: Build project
      command: npm run build
      args:
        chdir: '{{ app_dir }}'
      become_user: ubuntu

    - name: Kill any process on TCP port 3000
      shell: |
        lsof -ti tcp:3000 | xargs -r kill -9
      ignore_errors: yes

    - name: Start or restart frontend in PM2
      shell: |
        if pm2 describe frontend &>/dev/null; then
          pm2 restart frontend
        else
          pm2 start npm --name frontend -- start -- -p 3000 -H 0.0.0.0
        fi
        pm2 save
      args:
        chdir: '{{ app_dir }}'
      become_user: ubuntu

    - name: Setup PM2 startup at boot
      shell: |
        pm2 startup systemd -u ubuntu --hp /home/ubuntu
        pm2 save
      args:
        executable: /bin/bash
      become_user: ubuntu
